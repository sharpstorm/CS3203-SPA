name: Valgrind CI Check

on:
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        description: Binary to perform valgrind checks on
        options: 
        - unit_testing
        - integration_testing
        - autotester
        required: true
      executeflags:
        type: string
        description: Flags to pass to executable
      valgrindflags:
        type: string
        description: Flags to pass to executable

env:
    BUILD_TYPE: Release
    CCACHE_DIR: ${{ github.workspace }}/Team30/Code30/build/build-cache
    CCACHE_BASEDIR: ${{ github.workspace }}/Team30/Code30

jobs:
  valgrind-check:
    name: Run Valgrind
    runs-on: [self-hosted, Linux, compute]

    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v3

      - name: Setup Valgrind
        run: sudo apt-get install -y valgrind ccache

      - name: Setup Build Folder
        working-directory: ./Team30/Code30
        run: |
          cmake -E make_directory ./build

      - name: Generate CMake Project
        working-directory: ./Team30/Code30/build
        run: |
          sudo /usr/sbin/update-ccache-symlinks
          export PATH="/usr/lib/ccache:$PATH"
          ccache --set-config=cache_dir=${CCACHE_DIR}
          CC=clang CXX=clang++ cmake ../ -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Restore Build Cache
        uses: actions/cache/restore@v3
        with:
          key: build-cache-${{ github.head_ref || github.ref_name }}-${{github.sha}}
          path: ./Team30/Code30/build/build-cache
          restore-keys: |
            build-cache-${{ github.head_ref || github.ref_name }}-
            build-cache-
            master-scheduled-build-cache

      - name: Compile SPA
        working-directory: ./Team30/Code30/build
        run: cmake --build . --target ${{ github.event.inputs.mode }} --config ${BUILD_TYPE} -j 4

      - name: Run Valgrind
        working-directory: ./Team30/Code30/build
        run: valgrind ${{ github.event.inputs.valgrindflags }} ./src/${{ github.event.inputs.mode }}/${{ github.event.inputs.mode }} ${{ github.event.inputs.executeflags }}
