{
  "timeout": 5000,
  "cases": [

    {
      "name": "Parent Semantic Error(a1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(a1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,a1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, a1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(a1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(a1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,a1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, a1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(r1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(r1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,r1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, r1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(r1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(r1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,r1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, r1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(p1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(p1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,p1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, p1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(p1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(p1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,p1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, p1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(i1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(i1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,i1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, i1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(i1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(i1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,i1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, i1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(w1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(w1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,w1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, w1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(w1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(w1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,w1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, w1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(s1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(s1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,s1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, s1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(s1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(s1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,s1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, s1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(cl1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(cl1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(c1,cl1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(c1, cl1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(cl1,c1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(cl1, c1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(c1,cl1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(c1, cl1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(a1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(a1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,a1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, a1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(a1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(a1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,a1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, a1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(r1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(r1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,r1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, r1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(r1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(r1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,r1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, r1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(p1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(p1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,p1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, p1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(p1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(p1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,p1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, p1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(i1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(i1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,i1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, i1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(i1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(i1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,i1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, i1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(w1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(w1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,w1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, w1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(w1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(w1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,w1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, w1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(s1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(s1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,s1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, s1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(s1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(s1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,s1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, s1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(cl1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(cl1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(v1,cl1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(v1, cl1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(cl1,v1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(cl1, v1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(v1,cl1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(v1, cl1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(a1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(a1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,a1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, a1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(a1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(a1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,a1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, a1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(r1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(r1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,r1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, r1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(r1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(r1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,r1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, r1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(p1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(p1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,p1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, p1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(p1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(p1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,p1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, p1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(i1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(i1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,i1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, i1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(i1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(i1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,i1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, i1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(w1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(w1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,w1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, w1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(w1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(w1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,w1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, w1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(s1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(s1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,s1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, s1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(s1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(s1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,s1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, s1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(cl1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(cl1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent Semantic Error(pr1,cl1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent(pr1, cl1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(cl1,pr1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(cl1, pr1)",
      "ans": "SemanticError"
    },
    {
      "name": "Parent* Semantic Error(pr1,cl1)",
      "defn": "stmt s1, s2; assign a1, a2; print p1, p2; read r1, r2; if i1, i2; while w1, w2; call cl1, cl2; procedure pr1, pr2; constant c1, c2; variable v1, v2;",
      "query": "Select s1 such that Parent*(pr1, cl1)",
      "ans": "SemanticError"
    }    
  ]
}
