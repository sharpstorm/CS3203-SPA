#pragma once

#include <map>

using std::map;

// Super Categories
const ComplexityScore COMPLEXITY_SELECT = 1;

const ComplexityScore COMPLEXITY_WITH_SELECT = 20;
const ComplexityScore COMPLEXITY_WITH = 30;

const ComplexityScore COMPLEXITY_QUERY_CONSTANT = 10;

// Syn Type Expected Size
const ComplexityScore COMPLEXITY_QUERY_SYN_CONTAINER = 60;
const ComplexityScore COMPLEXITY_QUERY_SYN_CALL = 60;
const ComplexityScore COMPLEXITY_QUERY_SYN_PROCEDURE = 60;

const ComplexityScore COMPLEXITY_QUERY_SYN_ASSIGN = 80;
const ComplexityScore COMPLEXITY_QUERY_SYN_READ = 70;
const ComplexityScore COMPLEXITY_QUERY_SYN_PRINT = 70;

const ComplexityScore COMPLEXITY_QUERY_SYN_STMT = 90;
const ComplexityScore COMPLEXITY_QUERY_SYN_VARIABLE = 90;
const ComplexityScore COMPLEXITY_QUERY_SYN_CONSTANT = 90;

const ComplexityScore COMPLEXITY_NEXT = 50;
const ComplexityScore COMPLEXITY_NEXT_T_CONST = 30;
const ComplexityScore COMPLEXITY_NEXT_T = 400;
const ComplexityScore COMPLEXITY_AFFECTS_CONST = 70;
const ComplexityScore COMPLEXITY_AFFECTS = 500;
const ComplexityScore COMPLEXITY_AFFECTS_T_CONST = 100;
const ComplexityScore COMPLEXITY_AFFECTS_T = 600;

// Minor Tunings
const ComplexityScore COMPLEXITY_MODIFIER_PREFERRED = -5;
const ComplexityScore COMPLEXITY_MODIFIER_NONE = 0;
const ComplexityScore COMPLEXITY_MODIFIER_SMALL = 5;
const ComplexityScore COMPLEXITY_MODIFIER_MEDIUM = 10;
const ComplexityScore COMPLEXITY_MODIFIER_LARGE = 30;

const ComplexityScore COMPLEXITY_QUERY_TRANSITIVE = 20;
const ComplexityScore COMPLEXITY_QUERY_LIST_ALL = 20;

const map<PQLSynonymType, ComplexityScore> COMPLEXITY_SYN_LOOKUP = {
    {PQL_SYN_TYPE_PROCEDURE, COMPLEXITY_QUERY_SYN_PROCEDURE},
    {PQL_SYN_TYPE_VARIABLE, COMPLEXITY_QUERY_SYN_VARIABLE},
    {PQL_SYN_TYPE_CONSTANT, COMPLEXITY_QUERY_SYN_CONSTANT},
    {PQL_SYN_TYPE_IF, COMPLEXITY_QUERY_SYN_CONTAINER},
    {PQL_SYN_TYPE_WHILE, COMPLEXITY_QUERY_SYN_CONTAINER},
    {PQL_SYN_TYPE_ASSIGN, COMPLEXITY_QUERY_SYN_ASSIGN},
    {PQL_SYN_TYPE_READ, COMPLEXITY_QUERY_SYN_READ},
    {PQL_SYN_TYPE_PRINT, COMPLEXITY_QUERY_SYN_PRINT},
    {PQL_SYN_TYPE_CALL, COMPLEXITY_QUERY_SYN_CALL},
    {PQL_SYN_TYPE_STMT, COMPLEXITY_QUERY_SYN_STMT},
};
